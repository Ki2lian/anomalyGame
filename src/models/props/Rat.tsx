/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Sean Buckley (https://polyhaven.com/all?a=Sean%20Buckley)
License: CC0 (https://polyhaven.com/license)
Source: https://polyhaven.com/a/street_rat
Title: Street Rat
*/

import { Clone, useGLTF } from "@react-three/drei";
import { useMemo, useRef } from "react";
import { Euler, Group, Mesh, MeshStandardMaterial, Vector3 } from "three";
import { GLTF } from "three-stdlib";

import { IAnomalyProps } from "@/models/props/props-interface";
import useGame from "@/store/useGame";

export const Rat = ({ isAnomaly, anomalyType }: IAnomalyProps) => {
    const { difficulty } = useGame();

    const model = useGLTF("/models/props/rat.glb") as GLTFResult;

    const isAnomalyHard1 = isAnomaly && difficulty === "hard" && anomalyType === 1;

    const ratRef = useRef<Group>(null);

    const rats = useMemo(() => {
        return [
            { position: new Vector3(0.8, -0.526, 2.6), rotation: new Euler(0, Math.PI / 1.2, 0), scale: 3, visible: true },
            { position: new Vector3(-9, -0.526, -3.8), rotation: new Euler(0, -Math.PI, 0), scale: 3, visible: isAnomalyHard1 ? false : true },
        ];
    }, [ isAnomalyHard1 ]);

    return (
        <>
            {rats.map((rat, index) => (
                <Clone
                    key={ index }
                    ref={ ratRef }
                    object={ model.scene }
                    position={ rat.position }
                    rotation={ rat.rotation }
                    scale={ rat.scale }
                    visible={ rat.visible }
                />
            ))}
        </>
    );
};

type GLTFResult = GLTF & {
    nodes: {
        street_rat: Mesh;
    };
    materials: {
        street_rat: MeshStandardMaterial;
    };
};

useGLTF.preload("/models/props/rat.glb");
