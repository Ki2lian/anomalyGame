/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Sousinho (https://sketchfab.com/sousinho)
License: SKETCHFAB Standard (https://sketchfab.com/licenses)
Source: https://sketchfab.com/3d-models/plastic-round-bin-cf7c9f627f344138a291a431c42beaae
Title: Plastic round bin
*/

import { Clone, useGLTF } from "@react-three/drei";
import { RigidBody } from "@react-three/rapier";
import { Fragment, useMemo, useRef } from "react";
import { Euler, Group, Mesh, MeshStandardMaterial, Vector3 } from "three";
import { GLTF } from "three-stdlib";

import { IAnomalyProps } from "@/models/props/props-interface";
import useGame from "@/store/useGame";

export const PlasticRoundBin = ({ isAnomaly, anomalyType }: IAnomalyProps) => {
    const model = useGLTF("/models/props/bins/plastic_round.glb") as GLTFResult;

    const { difficulty } = useGame();

    const isAnomalyEasy1 = isAnomaly && difficulty === "easy" && anomalyType === 1;

    const plastincRoundBinRef = useRef<Group>(null);

    const bins = useMemo(() => {
        return [
            { position: new Vector3(-0.8, -0.2, 2.65), rotation: new Euler(0, Math.PI, 0), visible: isAnomalyEasy1 ? false : true },
            { position: new Vector3(-25.8, -0.2, -0.3), rotation: new Euler(0, Math.PI / 3, 0), visible: true },
        ];
    }, [ isAnomalyEasy1 ]);

    return (
        <>
            {bins.map((bin, index) => (
                <Fragment key={index}>
                    <RigidBody type="fixed" colliders="hull" position={bin.position} rotation={bin.rotation}>
                        <Clone ref={plastincRoundBinRef} object={model.scene} visible={bin.visible} />
                    </RigidBody>
                </Fragment>
            ))}
        </>
    );
};

type GLTFResult = GLTF & {
    nodes: {
        SM_Big_bin_T_bin_0: Mesh;
    };
    materials: {
        T_bin: MeshStandardMaterial;
    };
};

useGLTF.preload("/models/props/bins/plastic_round.glb");
