/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: hitheredearjohn (https://sketchfab.com/hitheredearjohn)
License: SKETCHFAB Standard (https://sketchfab.com/licenses)
Source: https://sketchfab.com/3d-models/clock-cd0e6a816e6942b587846dd1e866d59e
Title: Clock
*/

import { useGLTF } from "@react-three/drei";
import { useEffect, useRef, useState } from "react";
import { Group, MathUtils, Mesh, MeshStandardMaterial } from "three";
import { GLTF } from "three-stdlib";

import { IAnomalyProps } from "@/models/props/props-interface";
import useGame from "@/store/useGame";

export const Clock = ({ isAnomaly, anomalyType }: IAnomalyProps) => {
    const { difficulty } = useGame();

    const { nodes, materials } = useGLTF("/models/props/clock.glb") as GLTFResult;

    const isAnomalyEasy1 = isAnomaly && difficulty === "easy" && anomalyType === 1;

    const hoursArrowRef = useRef<Group>(null);
    const minutesArrowRef = useRef<Group>(null);
    const secondsArrowRef = useRef<Group>(null);

    const [ currentTime, setCurrentTime ] = useState<Date>(new Date());
    const currentSecond = useRef(currentTime.getSeconds());

    const calculateRotations = (date: Date) => {
        const hours = date.getHours() % 12;
        const minutes = date.getMinutes();
        const seconds = date.getSeconds();

        const hourRotation = (hours + minutes / 60) * 30;
        const minuteRotation = (minutes + seconds / 60) * 6;
        const secondRotation = seconds * 6;

        return {
            hourRotation: MathUtils.degToRad(hourRotation),
            minuteRotation: MathUtils.degToRad(minuteRotation),
            secondRotation: MathUtils.degToRad(secondRotation),
        };
    };

    useEffect(() => {
        const { hourRotation, minuteRotation, secondRotation } = calculateRotations(currentTime);

        if (hoursArrowRef.current) {
            hoursArrowRef.current.rotation.z = -hourRotation;
        }

        if (minutesArrowRef.current) {
            minutesArrowRef.current.rotation.z = -minuteRotation;
        }

        if (secondsArrowRef.current) {
            secondsArrowRef.current.rotation.z = -secondRotation;
        }
    }, [ currentTime ]);

    useEffect(() => {
        if (isAnomalyEasy1) return;
        const updateClock = () => {
            currentSecond.current += 1;

            if (currentSecond.current >= 60) {
                const newTime = new Date();
                currentSecond.current = newTime.getSeconds();
                setCurrentTime(newTime);

                const { hourRotation, minuteRotation } = calculateRotations(newTime);

                if (hoursArrowRef.current) {
                    hoursArrowRef.current.rotation.z = -hourRotation;
                }

                if (minutesArrowRef.current) {
                    minutesArrowRef.current.rotation.z = -minuteRotation;
                }
            }

            const secondRotation = MathUtils.degToRad(currentSecond.current * 6);
            if (secondsArrowRef.current) {
                secondsArrowRef.current.rotation.z = -secondRotation;
            }
        };

        const intervalId = setInterval(updateClock, 1000);
        return () => clearInterval(intervalId);
    }, [ currentTime, isAnomalyEasy1 ]);

    return (
        <group dispose={ null } scale={ 0.1 } position={ [ 2.955, 2, -2.2 ] } rotation={ [ Math.PI / 2, 0, Math.PI / 2 ] }>
            <group rotation={ [ -Math.PI / 2, 0, 0 ] }>
                <group position={ [ 0, 0, 0.799 ] } scale={ 0.082 } ref={ hoursArrowRef }>
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={ nodes.hour_hand_0.geometry }
                        material={ materials.hands_plastic }
                        position={ [ 0, 0, -4.01 ] }
                        scale={ 12.143 }
                    />
                </group>
                <group position={ [ 0, 0, 0.624 ] } scale={ 0.082 } ref={ minutesArrowRef }>
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={ nodes.minute_hand_0.geometry }
                        material={ materials.hands_plastic }
                        position={ [ 0, 0, -1.524 ] }
                        scale={ [ 1.085, 1.085, 0.683 ] }
                    />
                </group>
                <group position={ [ 0, 0, 1.025 ] } scale={ 0.526 }>
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={ nodes["1_0"].geometry }
                        material={ materials.Numbers }
                        position={ [ 1.93, 3.24, -1.171 ] }
                        scale={ 1.249 }
                    />
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={ nodes["10_0"].geometry }
                        material={ materials.Numbers }
                        position={ [ -3.53, 1.86, -1.171 ] }
                        scale={ 1.249 }
                    />
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={ nodes["11_0"].geometry }
                        material={ materials.Numbers }
                        position={ [ -2.144, 3.235, -1.171 ] }
                        scale={ 1.249 }
                    />
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={ nodes["12_0"].geometry }
                        material={ materials.Numbers }
                        position={ [ -0.284, 3.767, -1.171 ] }
                        scale={ 1.249 }
                    />
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={ nodes["2_0"].geometry }
                        material={ materials.Numbers }
                        position={ [ 3.235, 1.865, -1.171 ] }
                        scale={ 1.249 }
                    />
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={ nodes["3_0"].geometry }
                        material={ materials.Numbers }
                        position={ [ 3.767, -0.017, -1.171 ] }
                        scale={ 1.249 }
                    />
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={ nodes["4_0"].geometry }
                        material={ materials.Numbers }
                        position={ [ 3.24, -1.93, -1.171 ] }
                        scale={ 1.249 }
                    />
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={ nodes["5_0"].geometry }
                        material={ materials.Numbers }
                        position={ [ 1.865, -3.235, -1.171 ] }
                        scale={ 1.249 }
                    />
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={ nodes["6_0"].geometry }
                        material={ materials.Numbers }
                        position={ [ -0.017, -3.767, -1.171 ] }
                        scale={ 1.249 }
                    />
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={ nodes["7_0"].geometry }
                        material={ materials.Numbers }
                        position={ [ -1.93, -3.24, -1.171 ] }
                        scale={ 1.249 }
                    />
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={ nodes["8_0"].geometry }
                        material={ materials.Numbers }
                        position={ [ -3.235, -1.865, -1.171 ] }
                        scale={ 1.249 }
                    />
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={ nodes["9_0"].geometry }
                        material={ materials.Numbers }
                        position={ [ -3.73, -0.017, -1.171 ] }
                        scale={ 1.249 }
                    />
                </group>
                <group position={ [ 0, 0, 0.94 ] } scale={ 0.082 } ref={ secondsArrowRef }>
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={ nodes.second_hand_0.geometry }
                        material={ materials.hands_plastic }
                        position={ [ 0, 0, -5.08 ] }
                        scale={ [ 1.085, 1.085, 0.321 ] }
                    />
                </group>
                <mesh castShadow receiveShadow geometry={ nodes.clock_main_0.geometry } material={ materials.clock_metal } />
                <mesh castShadow receiveShadow geometry={ nodes.clock_main_1.geometry } material={ materials.dial } />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.hourmark002_0.geometry }
                    material={ materials.Numbers }
                    position={ [ 0, -2.44, 0.413 ] }
                    rotation={ [ 0, 0, -Math.PI ] }
                    scale={ [ 0.024, 0.082, 0.028 ] }
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.hourmark003_0.geometry }
                    material={ materials.Numbers }
                    position={ [ 1.22, -2.113, 0.413 ] }
                    rotation={ [ 0, 0, -2.617 ] }
                    scale={ [ 0.024, 0.082, 0.028 ] }
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.hourmark004_0.geometry }
                    material={ materials.Numbers }
                    position={ [ 2.113, -1.22, 0.413 ] }
                    rotation={ [ 0, 0, -2.095 ] }
                    scale={ [ 0.024, 0.082, 0.028 ] }
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.hourmark005_0.geometry }
                    material={ materials.Numbers }
                    position={ [ 2.44, 0, 0.413 ] }
                    rotation={ [ 0, 0, -Math.PI / 2 ] }
                    scale={ [ 0.024, 0.082, 0.028 ] }
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.hourmark006_0.geometry }
                    material={ materials.Numbers }
                    position={ [ 2.113, 1.22, 0.413 ] }
                    rotation={ [ 0, 0, -1.047 ] }
                    scale={ [ 0.024, 0.082, 0.028 ] }
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.hourmark007_0.geometry }
                    material={ materials.Numbers }
                    position={ [ 1.22, 2.113, 0.413 ] }
                    rotation={ [ 0, 0, -0.524 ] }
                    scale={ [ 0.024, 0.082, 0.028 ] }
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.hourmark008_0.geometry }
                    material={ materials.Numbers }
                    position={ [ 0, 2.44, 0.413 ] }
                    scale={ [ 0.024, 0.082, 0.028 ] }
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.hourmark009_0.geometry }
                    material={ materials.Numbers }
                    position={ [ -1.22, 2.113, 0.413 ] }
                    rotation={ [ 0, 0, 0.524 ] }
                    scale={ [ 0.024, 0.082, 0.028 ] }
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.hourmark010_0.geometry }
                    material={ materials.Numbers }
                    position={ [ -2.113, 1.22, 0.413 ] }
                    rotation={ [ 0, 0, 1.047 ] }
                    scale={ [ 0.024, 0.082, 0.028 ] }
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.hourmark011_0.geometry }
                    material={ materials.Numbers }
                    position={ [ -2.44, 0, 0.413 ] }
                    rotation={ [ 0, 0, Math.PI / 2 ] }
                    scale={ [ 0.024, 0.082, 0.028 ] }
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.hourmark012_0.geometry }
                    material={ materials.Numbers }
                    position={ [ -2.113, -1.22, 0.413 ] }
                    rotation={ [ 0, 0, 2.095 ] }
                    scale={ [ 0.024, 0.082, 0.028 ] }
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.hourmark013_0.geometry }
                    material={ materials.Numbers }
                    position={ [ -1.22, -2.113, 0.413 ] }
                    rotation={ [ 0, 0, 2.617 ] }
                    scale={ [ 0.024, 0.082, 0.028 ] }
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.hourmark014_0.geometry }
                    material={ materials.Numbers }
                    position={ [ 0, -2.44, 0.413 ] }
                    rotation={ [ 0, 0, -Math.PI ] }
                    scale={ [ 0.024, 0.082, 0.028 ] }
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.middle_0.geometry }
                    material={ materials.hands_plastic }
                    position={ [ 0, 0, 0.455 ] }
                    scale={ 0.055 }
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.minutemark002_0.geometry }
                    material={ materials.Numbers }
                    position={ [ -0.634, -2.369, 0.413 ] }
                    rotation={ [ 0, 0, 2.723 ] }
                    scale={ [ 0.014, 0.049, 0.017 ] }
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.minutemark003_0.geometry }
                    material={ materials.Numbers }
                    position={ [ 0.635, -2.369, 0.413 ] }
                    rotation={ [ 0, 0, -3.036 ] }
                    scale={ [ 0.014, 0.049, 0.017 ] }
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.minutemark004_0.geometry }
                    material={ materials.Numbers }
                    position={ [ 1.734, -1.733, 0.413 ] }
                    rotation={ [ 0, 0, -2.514 ] }
                    scale={ [ 0.014, 0.049, 0.017 ] }
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.minutemark005_0.geometry }
                    material={ materials.Numbers }
                    position={ [ 2.369, -0.634, 0.413 ] }
                    rotation={ [ 0, 0, -1.99 ] }
                    scale={ [ 0.014, 0.049, 0.017 ] }
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.minutemark006_0.geometry }
                    material={ materials.Numbers }
                    position={ [ 2.369, 0.635, 0.413 ] }
                    rotation={ [ 0, 0, -1.465 ] }
                    scale={ [ 0.014, 0.049, 0.017 ] }
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.minutemark007_0.geometry }
                    material={ materials.Numbers }
                    position={ [ 1.734, 1.734, 0.413 ] }
                    rotation={ [ 0, 0, -0.943 ] }
                    scale={ [ 0.014, 0.049, 0.017 ] }
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.minutemark008_0.geometry }
                    material={ materials.Numbers }
                    position={ [ 0.634, 2.369, 0.413 ] }
                    rotation={ [ 0, 0, -0.419 ] }
                    scale={ [ 0.014, 0.049, 0.017 ] }
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.minutemark009_0.geometry }
                    material={ materials.Numbers }
                    position={ [ -0.635, 2.369, 0.413 ] }
                    rotation={ [ 0, 0, 0.105 ] }
                    scale={ [ 0.014, 0.049, 0.017 ] }
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.minutemark010_0.geometry }
                    material={ materials.Numbers }
                    position={ [ -1.734, 1.733, 0.413 ] }
                    rotation={ [ 0, 0, 0.628 ] }
                    scale={ [ 0.014, 0.049, 0.017 ] }
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.minutemark011_0.geometry }
                    material={ materials.Numbers }
                    position={ [ -2.369, 0.634, 0.413 ] }
                    rotation={ [ 0, 0, 1.152 ] }
                    scale={ [ 0.014, 0.049, 0.017 ] }
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.minutemark012_0.geometry }
                    material={ materials.Numbers }
                    position={ [ -2.369, -0.635, 0.413 ] }
                    rotation={ [ 0, 0, 1.676 ] }
                    scale={ [ 0.014, 0.049, 0.017 ] }
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.minutemark013_0.geometry }
                    material={ materials.Numbers }
                    position={ [ -1.733, -1.734, 0.413 ] }
                    rotation={ [ 0, 0, 2.198 ] }
                    scale={ [ 0.014, 0.049, 0.017 ] }
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={ nodes.minutemark014_0.geometry }
                    material={ materials.Numbers }
                    position={ [ -0.634, -2.369, 0.413 ] }
                    rotation={ [ 0, 0, 2.723 ] }
                    scale={ [ 0.014, 0.049, 0.017 ] }
                />
            </group>
        </group>
    );
};
type GLTFResult = GLTF & {
    nodes: {
        clock_main_0: Mesh;
        clock_main_1: Mesh;
        hour_hand_0: Mesh;
        hourmark002_0: Mesh;
        hourmark003_0: Mesh;
        hourmark004_0: Mesh;
        hourmark005_0: Mesh;
        hourmark006_0: Mesh;
        hourmark007_0: Mesh;
        hourmark008_0: Mesh;
        hourmark009_0: Mesh;
        hourmark010_0: Mesh;
        hourmark011_0: Mesh;
        hourmark012_0: Mesh;
        hourmark013_0: Mesh;
        hourmark014_0: Mesh;
        middle_0: Mesh;
        minute_hand_0: Mesh;
        minutemark002_0: Mesh;
        minutemark003_0: Mesh;
        minutemark004_0: Mesh;
        minutemark005_0: Mesh;
        minutemark006_0: Mesh;
        minutemark007_0: Mesh;
        minutemark008_0: Mesh;
        minutemark009_0: Mesh;
        minutemark010_0: Mesh;
        minutemark011_0: Mesh;
        minutemark012_0: Mesh;
        minutemark013_0: Mesh;
        minutemark014_0: Mesh;
        ["1_0"]: Mesh;
        ["10_0"]: Mesh;
        ["11_0"]: Mesh;
        ["12_0"]: Mesh;
        ["2_0"]: Mesh;
        ["3_0"]: Mesh;
        ["4_0"]: Mesh;
        ["5_0"]: Mesh;
        ["6_0"]: Mesh;
        ["7_0"]: Mesh;
        ["8_0"]: Mesh;
        ["9_0"]: Mesh;
        second_hand_0: Mesh;
    };
    materials: {
        clock_metal: MeshStandardMaterial;
        dial: MeshStandardMaterial;
        hands_plastic: MeshStandardMaterial;
        Numbers: MeshStandardMaterial;
    };
};

useGLTF.preload("/models/props/clock.glb");
