/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Authors: Rico Cilliers (https://polyhaven.com/all?a=Rico%20Cilliers) and Rob Tuytel (https://polyhaven.com/all?a=Rob%20Tuytel)
License: CC0 (https://polyhaven.com/license)
Source: https://polyhaven.com/a/fancy_picture_frame_01
Title: Fancy Picture Frame 01
*/

import { useGLTF } from "@react-three/drei";
import { Mesh, MeshStandardMaterial } from "three";
import { GLTF } from "three-stdlib";

import { IAnomalyProps } from "@/models/props/props-interface";
import useGame from "@/store/useGame";

export const FancyPictureFramePainting = ({ isAnomaly, anomalyType }: IAnomalyProps) => {
    const { difficulty } = useGame();

    const model = useGLTF("/models/props/paintings/fancy_picture_frame.glb") as GLTFResult;

    const isAnomalyEasy1 = isAnomaly && difficulty === "easy" && anomalyType === 1;

    return (
        <>
            <primitive object={ model.scene } position={ isAnomalyEasy1 ? [ -8, 2, -4.03 ] : [ -2, 2, -4.03 ] } scale={ 2.5 } />
        </>
    );
};

type GLTFResult = GLTF & {
    nodes: {
        fancy_picture_frame_01: Mesh;
        fancy_picture_frame_01_canvas: Mesh;
    };
    materials: {
        fancy_picture_frame_01: MeshStandardMaterial;
        fancy_picture_frame_01_canvas: MeshStandardMaterial;
    };
};

useGLTF.preload("/models/props/paintings/fancy_picture_frame.glb");
