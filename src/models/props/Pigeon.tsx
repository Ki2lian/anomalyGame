/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Nyilonelycompany (https://sketchfab.com/Nyilonelycompany)
License: SKETCHFAB Standard (https://sketchfab.com/licenses)
Source: https://sketchfab.com/3d-models/gascogne-pigeon-bird-lowpoly-free-10d7975688f740fa9ba34c874da2b9d2
Title: Gascogne Pigeon Bird (Lowpoly) Free
*/

import { Clone, useGLTF } from "@react-three/drei";
import { useMemo, useRef } from "react";
import { Euler, Group, Mesh, MeshStandardMaterial, Vector3 } from "three";
import { GLTF } from "three-stdlib";

import { IAnomalyProps } from "@/models/props/props-interface";
import useGame from "@/store/useGame";

export const Pigeon = ({ isAnomaly, anomalyType }: IAnomalyProps) => {
    const { difficulty } = useGame();

    const model = useGLTF("/models/props/pigeon.glb") as GLTFResult;

    const isAnomalyHard1 = isAnomaly && difficulty === "hard" && anomalyType === 1;
    const isAnomalyHard2 = isAnomaly && difficulty === "hard" && anomalyType === 2;

    const pigeonRef = useRef<Group>(null);

    const pigeons = useMemo(() => {
        return [
            { position: new Vector3(8, 0.845, 3), rotation: new Euler(0, Math.PI / 2, 0), scale: 1 },
            { position: new Vector3(-2, 0.2, 5.1), rotation: new Euler(0, isAnomalyHard1 ? Math.PI / 2 : 0, 0), scale: 1.2 },
            { position: new Vector3(-16, -1.3, 6), rotation: new Euler(0, Math.PI / 1.6, 0), scale: isAnomalyHard2 ? 1 : 1.3 },
        ];
    }, [ isAnomalyHard1, isAnomalyHard2 ]);

    return (
        <>
            {pigeons.map((pigeon, index) => (
                <Clone key={index} ref={pigeonRef} object={model.scene} position={pigeon.position} rotation={pigeon.rotation} scale={pigeon.scale} />
            ))}
        </>
    );
};

type GLTFResult = GLTF & {
    nodes: {
        Object_4: Mesh;
    };
    materials: {
        Gascogne_Pigeon_mat: MeshStandardMaterial;
    };
};


useGLTF.preload("/pigeon.glb");
