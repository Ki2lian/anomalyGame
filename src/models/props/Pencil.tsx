/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Kroko.blend (https://sketchfab.com/jaromir.ternavskiy)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/pencil-b8db4648d0fa4a5ba6a565c463940c1e
Title: Pencil
*/

import { Clone, useGLTF } from "@react-three/drei";
import { useMemo, useRef } from "react";
import { Euler, Group, Mesh, MeshStandardMaterial, Vector3 } from "three";
import { GLTF } from "three-stdlib";

export const Pencil = () => {
    const model = useGLTF("/models/props/pencil.glb") as GLTFResult;

    const pencilRef = useRef<Group>(null);

    const pencils = useMemo(() => {
        return [
            { position: new Vector3(-0.5, 0.382, -1), rotation: new Euler(0, -Math.PI / 4.7, 0) },
            { position: new Vector3(-5, 0.382, -3.5), rotation: new Euler(0, Math.PI / 4.7, 0) },
        ];
    }, []);

    return (
        <>
            {pencils.map((pencil, index) => (
                <Clone key={index} ref={pencilRef} object={model.scene} scale={0.008} rotation={pencil.rotation} position={pencil.position} />
            ))}
        </>
    );
};

type GLTFResult = GLTF & {
    nodes: {
        Cylinder_Material002_0: Mesh;
        Cylinder001_Material_0: Mesh;
        Cylinder002_Material001_0: Mesh;
        Cylinder003_Material004_0: Mesh;
        Cylinder003_Material003_0: Mesh;
    };
    materials: {
        ["Material.002"]: MeshStandardMaterial;
        Material: MeshStandardMaterial;
        ["Material.001"]: MeshStandardMaterial;
        ["Material.004"]: MeshStandardMaterial;
        ["Material.003"]: MeshStandardMaterial;
    };
};

useGLTF.preload("/models/props/pencil.glb");
