/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: SMiller (https://sketchfab.com/S_Miller)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/pencil-case-b8f3220d778b4877940897759d194664
Title: Pencil case
*/

import { Clone, useGLTF } from "@react-three/drei";
import { useMemo, useRef } from "react";
import { Euler, Group, Mesh, MeshBasicMaterial, Vector3 } from "three";
import { GLTF } from "three-stdlib";

export const PencilCaseDakine = () => {
    const model = useGLTF("/models/props/pencil_cases/dakine.glb") as GLTFResult;

    const pencilCaseRef = useRef<Group>(null);

    const pencilCases = useMemo(() => {
        return [
            { position: new Vector3(1.5, 0.4765, -1.5), rotation: new Euler(0, Math.PI / 3, 0) },
            { position: new Vector3(-4.9, 0.4765, -1.2), rotation: new Euler(0, Math.PI / 2.6, 0) },
        ];
    }, []);

    return (
        <>
            {pencilCases.map((pencilCase, index) => (
                <Clone
                    key={ index }
                    ref={ pencilCaseRef }
                    object={ model.scene }
                    scale={ 1.3 }
                    rotation={ pencilCase.rotation }
                    position={ pencilCase.position }
                />
            ))}
        </>
    );
};

type GLTFResult = GLTF & {
    nodes: {
        Object_2: Mesh;
    };
    materials: {
        material: MeshBasicMaterial;
    };
};

useGLTF.preload("/models/props/pencil_cases/dakine.glb");
