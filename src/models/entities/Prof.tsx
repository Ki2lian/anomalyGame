/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useAnimations, useGLTF } from "@react-three/drei";
import { useGraph } from "@react-three/fiber";
import { useEffect, useMemo, useRef } from "react";
import { AnimationClip, Bone, Group, MeshStandardMaterial, SkinnedMesh } from "three";
import { GLTF, SkeletonUtils } from "three-stdlib";

export const Prof = (props: React.JSX.IntrinsicElements["group"]) => {
    const group = useRef<Group>(null);

    const { scene, animations } = useGLTF("/models/entities/prof.glb");
    const clone = useMemo(() => SkeletonUtils.clone(scene), [ scene ]);

    const { nodes, materials } = useGraph(clone) as GLTFResult;

    const { actions } = useAnimations(animations, group);

    useEffect(() => {
        actions.idle && actions.idle.play();
    }, [ actions.idle ]);

    return (
        <group ref={group} {...props} dispose={null} position={[ -20, -0.554, -3 ]} rotation={[ 0, Math.PI / 3, 0 ]} scale={1.3}>
            <group name="Scene">
                <group name="Prof" rotation={[ Math.PI / 2, 0, 0 ]} scale={0.01}>
                    <primitive object={nodes.mixamorig4Hips} />
                </group>
                <group name="Ch12" rotation={[ Math.PI / 2, 0, 0 ]} scale={0.01}>
                    <skinnedMesh
                        name="Maillage"
                        geometry={nodes.Maillage.geometry}
                        material={materials.Ch12_body}
                        skeleton={nodes.Maillage.skeleton}
                    />
                    <skinnedMesh
                        name="Maillage_1"
                        geometry={nodes.Maillage_1.geometry}
                        material={materials.Ch12_hair}
                        skeleton={nodes.Maillage_1.skeleton}
                    />
                </group>
            </group>
        </group>
    );
};

type TActionName = "idle" | "t-pose";

interface IGLTFAction extends AnimationClip {
    name: TActionName;
}

type GLTFResult = GLTF & {
    nodes: {
        Maillage: SkinnedMesh;
        Maillage_1: SkinnedMesh;
        mixamorig4Hips: Bone;
    };
    materials: {
        Ch12_body: MeshStandardMaterial;
        Ch12_hair: MeshStandardMaterial;
    };
    animations: IGLTFAction[];
};

useGLTF.preload("/models/entities/prof.glb");
