/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useAnimations, useGLTF } from "@react-three/drei";
import { useEffect, useRef } from "react";
import { AnimationClip, Group } from "three";
import { GLTF } from "three-stdlib";

export const Prof = (props: React.JSX.IntrinsicElements["group"]) => {
    const group = useRef<Group>(null);

    const model = useGLTF("/models/entities/prof.glb") as GLTFResult;

    const { actions } = useAnimations(model.animations, group);

    useEffect(() => {
        if (!actions.idle) return;
        actions.idle.play();
    }, [ actions.idle ]);

    return <primitive ref={ group } object={ model.scene } position={ [ -20, -0.554, -3 ] } rotation={ [ 0, Math.PI / 3, 0 ] } scale={ 1.3 } { ...props } />;
};

type TActionName = "idle" | "t-pose";

interface IGLTFAction extends AnimationClip {
    name: TActionName;
}

type GLTFResult = GLTF & {
    animations: IGLTFAction[];
};

useGLTF.preload("/models/entities/prof.glb");
